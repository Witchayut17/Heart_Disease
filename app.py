import os
import streamlit as st
import pickle
import numpy as np

st.set_page_config(page_title="‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à", layout="wide")

# ‡πÉ‡∏™‡πà CSS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î container ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
st.markdown(
    """
    <style>
    .centered-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 90vh;
        flex-direction: column;
    }
    </style>
    """, unsafe_allow_html=True
)

st.title("‚ù§Ô∏è ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à")

@st.cache_resource
def load_model_and_scaler():
    with open('model.pkl', 'rb') as f:
        model = pickle.load(f)
    with open('scaler.pkl', 'rb') as f:
        scaler = pickle.load(f)
    return model, scaler

model, scaler = load_model_and_scaler()

with st.container():
    st.markdown('<div class="centered-container">', unsafe_allow_html=True)
    with st.container():
        st.markdown('<div class="centered-form">', unsafe_allow_html=True)

        st.subheader("ü©∫ ‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")

        c1, c2, c3 = st.columns([2, 1, 2])
        with c1:
            age = st.number_input('‡∏≠‡∏≤‡∏¢‡∏∏', 1, 120, 50)
        with c2:
            sex = st.selectbox('‡πÄ‡∏û‡∏®', options=[0, 1], format_func=lambda x: '‡∏´‡∏ç‡∏¥‡∏á' if x == 0 else '‡∏ä‡∏≤‡∏¢')
        with c3:
            cp = st.selectbox('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å (1‚Äì4)', options=[1, 2, 3, 4])

        c1, c2, c3 = st.columns([2, 2, 2])
        with c1:
            trestbps = st.number_input('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏Ç‡∏ì‡∏∞‡∏û‡∏±‡∏Å (‡∏°‡∏°.‡∏õ‡∏£‡∏≠‡∏ó)', 50, 250, 120)
        with c2:
            chol = st.number_input('‡∏Ñ‡∏≠‡πÄ‡∏•‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡∏≠‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î (mg/dl)', 100, 600, 200)
        with c3:
            fbs = st.selectbox('‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏ì‡∏∞‡∏≠‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£', options=[0, 1], format_func=lambda x: '‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 120' if x == 0 else '‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 120')

        c1, c2, c3 = st.columns([2, 2, 2])
        with c1:
            restecg = st.selectbox('‡∏ú‡∏•‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏Ç‡∏ì‡∏∞‡∏û‡∏±‡∏Å', options=[0, 1, 2])
        with c2:
            thalach = st.number_input('‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡πâ‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î', 60, 250, 150)
        with c3:
            exang = st.selectbox('‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', options=[0, 1], format_func=lambda x: '‡πÑ‡∏°‡πà‡∏°‡∏µ' if x == 0 else '‡∏°‡∏µ')

        c1, c2, c3 = st.columns([2, 2, 2])
        with c1:
            oldpeak = st.number_input('‡∏Ñ‡πà‡∏≤ ST depression ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢', 0.0, 10.0, 1.0, format="%.1f")
        with c2:
            slope = st.selectbox('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü ST ‡∏Ç‡∏ì‡∏∞‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢', options=[1, 2, 3])
        with c3:
            ca = st.selectbox('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏≤‡∏Å‡∏ü‡∏•‡∏π‡πÇ‡∏≠‡πÇ‡∏£‡∏™‡πÇ‡∏Ñ‡∏õ‡∏µ', options=[0, 1, 2, 3, 4])

        thal = st.selectbox('‡∏†‡∏≤‡∏ß‡∏∞‡∏ò‡∏≤‡∏•‡∏±‡∏™‡∏ã‡∏µ‡πÄ‡∏°‡∏µ‡∏¢', options=[3, 6, 7])

        if st.button('‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á'):
            input_data = np.array([[age, sex, cp, trestbps, chol, fbs, restecg, thalach,
                                    exang, oldpeak, slope, ca, thal]])
            input_scaled = scaler.transform(input_data)
            prediction = model.predict(input_scaled)[0]
            proba = model.predict_proba(input_scaled)[0][prediction]

            if prediction == 1:
                st.error(f"‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à\n\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•:** {proba:.2f}\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå")
            else:
                st.success(f"‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥\n\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•:** {proba:.2f}\n‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏î‡∏µ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏∞‡∏Ñ‡∏∞")

        st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)
